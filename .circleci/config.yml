version: 2
jobs:
  checkout_and_install:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ .Environment.DEP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - dependency-cache-{{ .Environment.DEP_CACHE_VERSION }}-{{ .Branch }}-
            - dependency-cache-{{ .Environment.DEP_CACHE_VERSION }}-
      - run:
          name: Install Dependencies
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc && npm ci
      - save_cache:
          key: dependency-cache-{{ .Environment.DEP_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "$HOME/.npm"
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build
  compile_contracts:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile contracts
          command: npm run compile -- --all
      - save_cache:
          key: cache-completed-build-contracts-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build
  coverage:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Coverage
          command: python util/fix_contracts_for_coverage.py && npm run coverage
          no_output_timeout: 60m
      - run:
          name: Coveralls
          command: cat coverage/lcov.info | node_modules/.bin/coveralls
  lint:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: npm run lint
  test:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
      - image: trufflesuite/ganache-cli:v6.8.2
        command: -d -k=istanbul -i 1001
    working_directory: ~/build
    parallelism: 2
    steps:
      - restore_cache:
          key: cache-completed-build-contracts-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Docker
          command: apk add docker
      - run:
          name: Test
          command: TESTFILES=$(circleci tests glob "test/**/*.test.ts" | circleci tests split --split-by=filesize) && npm run test -- ${TESTFILES}
          no_output_timeout: 20m
  build_js:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-completed-build-contracts-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build
          command: npm run build
      - run:
          name: Copy over contracts
          command: mkdir -p dist/build/contracts && cp build/published_contracts/*.json dist/build/contracts
      - save_cache:
          key: cache-completed-build-js-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build
  publish:
    docker:
      - image: dydxprotocol/node:10.16.3-alpine
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-completed-build-js-{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys:
          fingerprints:
            - "1d:9d:cb:8e:ea:7e:ba:9c:80:c3:60:1f:c1:ae:cb:67"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/build/.npmrc
      - run:
          command: sh scripts/publish_if_not_exists.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_install
      - compile_contracts:
          requires:
            - checkout_and_install
      - lint:
          requires:
            - checkout_and_install
      - coverage:
          requires:
            - checkout_and_install
      - test:
          requires:
            - compile_contracts
      - build_js:
          requires:
            - compile_contracts
      - publish:
          requires:
            - test
            - lint
            - build_js
            - coverage
          filters:
            branches:
              only: master
